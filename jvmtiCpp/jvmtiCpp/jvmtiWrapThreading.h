/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class me_paolo_jvmti_jvmtiEnv */

#ifndef _Included_jvmtiWrapThreading
#define _Included_jvmtiWrapThreading
#ifdef __cplusplus
extern "C" {
#endif
	/*
	 * Class:     me_paolo_jvmti_jvmtiEnv
	 * Method:    GetCurrentThread
	 * Signature: ()Ljava/lang/Thread;
	 */
	JNIEXPORT jobject JNICALL Java_me_paolo_jvmti_jvmtiEnv_GetCurrentThread
	(JNIEnv*, jclass);

	/*
	 * Class:     me_paolo_jvmti_jvmtiEnv
	 * Method:    GetAllThreads
	 * Signature: ()[Ljava/lang/Thread;
	 */
	JNIEXPORT jobjectArray JNICALL Java_me_paolo_jvmti_jvmtiEnv_GetAllThreads
	(JNIEnv*, jclass);

	/*
	 * Class:     me_paolo_jvmti_jvmtiEnv
	 * Method:    SuspendThread
	 * Signature: (Ljava/lang/Thread;)Lme/paolo/jvmti/jvmtiError;
	 */
	JNIEXPORT jobject JNICALL Java_me_paolo_jvmti_jvmtiEnv_SuspendThread
	(JNIEnv*, jclass, jobject);

	/*
	 * Class:     me_paolo_jvmti_jvmtiEnv
	 * Method:    ResumeThread
	 * Signature: (Ljava/lang/Thread;)Lme/paolo/jvmti/jvmtiError;
	 */
	JNIEXPORT jobject JNICALL Java_me_paolo_jvmti_jvmtiEnv_ResumeThread
	(JNIEnv*, jclass, jobject);

	/*
	 * Class:     me_paolo_jvmti_jvmtiEnv
	 * Method:    StopThread
	 * Signature: (Ljava/lang/Thread;Ljava/lang/Exception;)Lme/paolo/jvmti/jvmtiError;
	 */
	JNIEXPORT jobject JNICALL Java_me_paolo_jvmti_jvmtiEnv_StopThread
	(JNIEnv*, jclass, jobject, jobject);

	/*
	 * Class:     me_paolo_jvmti_jvmtiEnv
	 * Method:    InterruptThread
	 * Signature: (Ljava/lang/Thread;)Lme/paolo/jvmti/jvmtiError;
	 */
	JNIEXPORT jobject JNICALL Java_me_paolo_jvmti_jvmtiEnv_InterruptThread
	(JNIEnv*, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
