package me.paolo.jvmti.event;

import java.util.Arrays;

public enum jvmtiEvent
{

    JVMTI_MIN_EVENT_TYPE_VAL(50),
    JVMTI_EVENT_VM_INIT(50),
    JVMTI_EVENT_VM_DEATH(51),
    JVMTI_EVENT_THREAD_START(52),
    JVMTI_EVENT_THREAD_END(53),
    JVMTI_EVENT_CLASS_FILE_LOAD_HOOK(54),
    JVMTI_EVENT_CLASS_LOAD(55),
    JVMTI_EVENT_CLASS_PREPARE(56),
    JVMTI_EVENT_VM_START(57),
    JVMTI_EVENT_EXCEPTION(58),
    JVMTI_EVENT_EXCEPTION_CATCH(59),
    JVMTI_EVENT_SINGLE_STEP(60),
    JVMTI_EVENT_FRAME_POP(61),
    JVMTI_EVENT_BREAKPOINT(62),
    JVMTI_EVENT_FIELD_ACCESS(63),
    JVMTI_EVENT_FIELD_MODIFICATION(64),
    JVMTI_EVENT_METHOD_ENTRY(65),
    JVMTI_EVENT_METHOD_EXIT(66),
    JVMTI_EVENT_NATIVE_METHOD_BIND(67),
    JVMTI_EVENT_COMPILED_METHOD_LOAD(68),
    JVMTI_EVENT_COMPILED_METHOD_UNLOAD(69),
    JVMTI_EVENT_DYNAMIC_CODE_GENERATED(70),
    JVMTI_EVENT_DATA_DUMP_REQUEST(71),
    JVMTI_EVENT_MONITOR_WAIT(73),
    JVMTI_EVENT_MONITOR_WAITED(74),
    JVMTI_EVENT_MONITOR_CONTENDED_ENTER(75),
    JVMTI_EVENT_MONITOR_CONTENDED_ENTERED(76),
    JVMTI_EVENT_RESOURCE_EXHAUSTED(80),
    JVMTI_EVENT_GARBAGE_COLLECTION_START(81),
    JVMTI_EVENT_GARBAGE_COLLECTION_FINISH(82),
    JVMTI_EVENT_OBJECT_FREE(83),
    JVMTI_EVENT_VM_OBJECT_ALLOC(84),
    JVMTI_MAX_EVENT_TYPE_VAL(84);
    
    private final int id;
    jvmtiEvent(int id) {
        this.id = id;
    }

    public int getId() {
        return id;
    }

    public static jvmtiEvent getById(int id) {
        return Arrays.stream(values())
                .filter(e -> e.getId() == id)
                .findAny().orElse(null);
    }

}
